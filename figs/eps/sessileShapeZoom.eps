%!PS-Adobe-3.0 EPSF-3.0
%Produced by poppler pdftops version: 0.22.5 (http://poppler.freedesktop.org)
%%Creator: gnuplot 4.4 patchlevel 3
%%LanguageLevel: 2
%%DocumentSuppliedResources: (atend)
%%BoundingBox: 0 0 286 476
%%HiResBoundingBox: 0 0 286 476
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
%%BeginResource: procset xpdf 3.00 0
%%Copyright: Copyright 1996-2011 Glyph & Cog, LLC
/xpdf 75 dict def xpdf begin
% PDF special state
/pdfDictSize 15 def
/pdfSetup {
  /setpagedevice where {
    pop 2 dict begin
      /Policies 1 dict dup begin /PageSize 6 def end def
      { /Duplex true def } if
    currentdict end setpagedevice
  } {
    pop
  } ifelse
} def
/pdfSetupPaper {
  2 array astore
  /setpagedevice where {
    pop 2 dict begin
      /PageSize exch def
      /ImagingBBox null def
    currentdict end setpagedevice
  } {
    pop
  } ifelse
} def
/pdfStartPage {
  pdfDictSize dict begin
  /pdfFillCS [] def
  /pdfFillXform {} def
  /pdfStrokeCS [] def
  /pdfStrokeXform {} def
  /pdfFill [0] def
  /pdfStroke [0] def
  /pdfFillOP false def
  /pdfStrokeOP false def
  /pdfLastFill false def
  /pdfLastStroke false def
  /pdfTextMat [1 0 0 1 0 0] def
  /pdfFontSize 0 def
  /pdfCharSpacing 0 def
  /pdfTextRender 0 def
  /pdfPatternCS false def
  /pdfTextRise 0 def
  /pdfWordSpacing 0 def
  /pdfHorizScaling 1 def
  /pdfTextClipPath [] def
} def
/pdfEndPage { end } def
% PDF color state
/cs { /pdfFillXform exch def dup /pdfFillCS exch def
      setcolorspace } def
/CS { /pdfStrokeXform exch def dup /pdfStrokeCS exch def
      setcolorspace } def
/sc { pdfLastFill not { pdfFillCS setcolorspace } if
      dup /pdfFill exch def aload pop pdfFillXform setcolor
     /pdfLastFill true def /pdfLastStroke false def } def
/SC { pdfLastStroke not { pdfStrokeCS setcolorspace } if
      dup /pdfStroke exch def aload pop pdfStrokeXform setcolor
     /pdfLastStroke true def /pdfLastFill false def } def
/op { /pdfFillOP exch def
      pdfLastFill { pdfFillOP setoverprint } if } def
/OP { /pdfStrokeOP exch def
      pdfLastStroke { pdfStrokeOP setoverprint } if } def
/fCol {
  pdfLastFill not {
    pdfFillCS setcolorspace
    pdfFill aload pop pdfFillXform setcolor
    pdfFillOP setoverprint
    /pdfLastFill true def /pdfLastStroke false def
  } if
} def
/sCol {
  pdfLastStroke not {
    pdfStrokeCS setcolorspace
    pdfStroke aload pop pdfStrokeXform setcolor
    pdfStrokeOP setoverprint
    /pdfLastStroke true def /pdfLastFill false def
  } if
} def
% build a font
/pdfMakeFont {
  4 3 roll findfont
  4 2 roll matrix scale makefont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /Encoding exch def
    currentdict
  end
  definefont pop
} def
/pdfMakeFont16 {
  exch findfont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /WMode exch def
    currentdict
  end
  definefont pop
} def
% graphics state operators
/q { gsave pdfDictSize dict begin } def
/Q {
  end grestore
  /pdfLastFill where {
    pop
    pdfLastFill {
      pdfFillOP setoverprint
    } {
      pdfStrokeOP setoverprint
    } ifelse
  } if
} def
/cm { concat } def
/d { setdash } def
/i { setflat } def
/j { setlinejoin } def
/J { setlinecap } def
/M { setmiterlimit } def
/w { setlinewidth } def
% path segment operators
/m { moveto } def
/l { lineto } def
/c { curveto } def
/re { 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
      neg 0 rlineto closepath } def
/h { closepath } def
% path painting operators
/S { sCol stroke } def
/Sf { fCol stroke } def
/f { fCol fill } def
/f* { fCol eofill } def
% clipping operators
/W { clip newpath } def
/W* { eoclip newpath } def
/Ws { strokepath clip newpath } def
% text state operators
/Tc { /pdfCharSpacing exch def } def
/Tf { dup /pdfFontSize exch def
      dup pdfHorizScaling mul exch matrix scale
      pdfTextMat matrix concatmatrix dup 4 0 put dup 5 0 put
      exch findfont exch makefont setfont } def
/Tr { /pdfTextRender exch def } def
/Tp { /pdfPatternCS exch def } def
/Ts { /pdfTextRise exch def } def
/Tw { /pdfWordSpacing exch def } def
/Tz { /pdfHorizScaling exch def } def
% text positioning operators
/Td { pdfTextMat transform moveto } def
/Tm { /pdfTextMat exch def } def
% text string operators
/xyshow where {
  pop
  /xyshow2 {
    dup length array
    0 2 2 index length 1 sub {
      2 index 1 index 2 copy get 3 1 roll 1 add get
      pdfTextMat dtransform
      4 2 roll 2 copy 6 5 roll put 1 add 3 1 roll dup 4 2 roll put
    } for
    exch pop
    xyshow
  } def
}{
  /xyshow2 {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval show moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval show moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/cshow where {
  pop
  /xycp {
    0 3 2 roll
    {
      pop pop currentpoint 3 2 roll
      1 string dup 0 4 3 roll put false charpath moveto
      2 copy get 2 index 2 index 1 add get
      pdfTextMat dtransform rmoveto
      2 add
    } exch cshow
    pop pop
  } def
}{
  /xycp {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval false charpath moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval false charpath moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/Tj {
  fCol
  0 pdfTextRise pdfTextMat dtransform rmoveto
  currentpoint 4 2 roll
  pdfTextRender 1 and 0 eq {
    2 copy xyshow2
  } if
  pdfTextRender 3 and dup 1 eq exch 2 eq or {
    3 index 3 index moveto
    2 copy
    currentfont /FontType get 3 eq { fCol } { sCol } ifelse
    xycp currentpoint stroke moveto
  } if
  pdfTextRender 4 and 0 ne {
    4 2 roll moveto xycp
    /pdfTextClipPath [ pdfTextClipPath aload pop
      {/moveto cvx}
      {/lineto cvx}
      {/curveto cvx}
      {/closepath cvx}
    pathforall ] def
    currentpoint newpath moveto
  } {
    pop pop pop pop
  } ifelse
  0 pdfTextRise neg pdfTextMat dtransform rmoveto
} def
/TJm { 0.001 mul pdfFontSize mul pdfHorizScaling mul neg 0
       pdfTextMat dtransform rmoveto } def
/TJmV { 0.001 mul pdfFontSize mul neg 0 exch
        pdfTextMat dtransform rmoveto } def
/Tclip { pdfTextClipPath cvx exec clip newpath
         /pdfTextClipPath [] def } def
/Tclip* { pdfTextClipPath cvx exec eoclip newpath
         /pdfTextClipPath [] def } def
% Level 2/3 image operators
/pdfImBuf 100 string def
/pdfImStr {
  2 copy exch length lt {
    2 copy get exch 1 add exch
  } {
    ()
  } ifelse
} def
/skipEOD {
  { currentfile pdfImBuf readline
    not { pop exit } if
    (%-EOD-) eq { exit } if } loop
} def
/pdfIm { image skipEOD } def
/pdfImM { fCol imagemask skipEOD } def
/pr { 2 index 2 index 3 2 roll putinterval 4 add } def
/pdfImClip {
  gsave
  0 2 4 index length 1 sub {
    dup 4 index exch 2 copy
    get 5 index div put
    1 add 3 index exch 2 copy
    get 3 index div put
  } for
  pop pop rectclip
} def
/pdfImClipEnd { grestore } def
% shading operators
/colordelta {
  false 0 1 3 index length 1 sub {
    dup 4 index exch get 3 index 3 2 roll get sub abs 0.004 gt {
      pop true
    } if
  } for
  exch pop exch pop
} def
/funcCol { func n array astore } def
/funcSH {
  dup 0 eq {
    true
  } {
    dup 6 eq {
      false
    } {
      4 index 4 index funcCol dup
      6 index 4 index funcCol dup
      3 1 roll colordelta 3 1 roll
      5 index 5 index funcCol dup
      3 1 roll colordelta 3 1 roll
      6 index 8 index funcCol dup
      3 1 roll colordelta 3 1 roll
      colordelta or or or
    } ifelse
  } ifelse
  {
    1 add
    4 index 3 index add 0.5 mul exch 4 index 3 index add 0.5 mul exch
    6 index 6 index 4 index 4 index 4 index funcSH
    2 index 6 index 6 index 4 index 4 index funcSH
    6 index 2 index 4 index 6 index 4 index funcSH
    5 3 roll 3 2 roll funcSH pop pop
  } {
    pop 3 index 2 index add 0.5 mul 3 index  2 index add 0.5 mul
    funcCol sc
    dup 4 index exch mat transform m
    3 index 3 index mat transform l
    1 index 3 index mat transform l
    mat transform l pop pop h f*
  } ifelse
} def
/axialCol {
  dup 0 lt {
    pop t0
  } {
    dup 1 gt {
      pop t1
    } {
      dt mul t0 add
    } ifelse
  } ifelse
  func n array astore
} def
/axialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index axialCol 2 index axialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index axialSH
    exch 3 2 roll axialSH
  } {
    pop 2 copy add 0.5 mul
    axialCol sc
    exch dup dx mul x0 add exch dy mul y0 add
    3 2 roll dup dx mul x0 add exch dy mul y0 add
    dx abs dy abs ge {
      2 copy yMin sub dy mul dx div add yMin m
      yMax sub dy mul dx div add yMax l
      2 copy yMax sub dy mul dx div add yMax l
      yMin sub dy mul dx div add yMin l
      h f*
    } {
      exch 2 copy xMin sub dx mul dy div add xMin exch m
      xMax sub dx mul dy div add xMax exch l
      exch 2 copy xMax sub dx mul dy div add xMax exch l
      xMin sub dx mul dy div add xMin exch l
      h f*
    } ifelse
  } ifelse
} def
/radialCol {
  dup t0 lt {
    pop t0
  } {
    dup t1 gt {
      pop t1
    } if
  } ifelse
  func n array astore
} def
/radialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index dt mul t0 add radialCol
      2 index dt mul t0 add radialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index radialSH
    exch 3 2 roll radialSH
  } {
    pop 2 copy add 0.5 mul dt mul t0 add
    radialCol sc
    encl {
      exch dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      0 360 arc h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      360 0 arcn h f
    } {
      2 copy
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arcn
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arcn h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arc
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arc h f
    } ifelse
  } ifelse
} def
end
%%EndResource
%%EndProlog
%%BeginSetup
xpdf begin
%%BeginResource: font TOCVUS+Times-Roman
%!FontType1-1.0: TOCVUS+Times-Roman
12 dict begin
/FontInfo 10 dict dup begin
/Notice (Copyright \(URW\)++,Copyright 1999 by \(URW\)++ Design & Develo\
pment; Cyrillic glyphs added by Valek Filippov \(C\) 2001-2005) readonly def
/FullName (Nimbus Roman No9 L Regular) readonly def
/FamilyName (Nimbus Roman No9 L) readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition 0 def
/UnderlineThickness 0 def
end readonly def
/FontName /TOCVUS+Times-Roman def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/FontBBox [0 -14 479 688] readonly def
/StrokeWidth 0 def
/UniqueID 5020931 def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 32 /space put
dup 46 /period put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 55 /seven put
dup 56 /eight put
dup 57 /nine put
dup 120 /x put
readonly def
currentdict end
currentfile eexec
5AA4F71255501637F1A431BAB555283D093E1B588B45B0281559110D21315C62
BD638C6B34BA54AA75227715D9947EBCD51A104CAEA657499E94138F5645BF68
368BB1B1EC8E4776F067FFF2CE9B89FB7E63A7DB304498C1036D399C47A4CB79
BD517EDB02BEB90195FD7DDAF3E839BCE2DB156D9337DBB2305A465B3E0FFB97
1985C79DC71C47E26F9F0F042B2CDEE97B679358059256FB93D662D43C7ECB5B
1A564DFCECB963478373C69F52172F071E0AA6082A3E10D9E1CE2851CFA210EE
7BD5FCB1AAE15E89D1FB339D587D218B89C18A32F47C7451A80CB1FC07CF5EF6
F88E0E90C57EC003CFF45554C63978A4457910ACCCBDB199AE01D3A5CC868F4B
822F86C8BEBF268A62A74B74B7BB3BB731E3098EBB936E540471387BC93EBC24
731A8FD551B73BB61F5470D5B804CCE0D897C3F8651422B30EBF8D82BF962DDA
BF33C897A6ACD27770FAA07EB13C67191297413C15F11F22612AB3189B5880CE
31AE89FDB662E68CA79FAC1532B86E73CD48465887302B2BC98A664D4A97B951
1E8E3830783F7A9D2E26D18C80D93A03840C6D8B5765F2830D0770AC35C19482
4A9176A3A6E4DDD87C00C7B9C6803D5A2A686DC83EC72D9BC564776BD96444CC
5ACAB0F6B98BAD741F010CAEFAE179A1B60E6CEC4126DB7E2498CFF7D5CECFF6
C6F5FFF752607E0E6AC9AB2E69491D35B5AC8EE70FAEF0479D18F16F454C045C
3F79602EFD0F26E3E9E952348D51C6D675AEB1B6EF5C5E30DC8D2BC8EA8EE8FD
22727A6A05C2C38EF07AC3CC91E50A51BE67F28273F8A8D8DCF3BC6FF618085D
333CEDF28879225DECBF9CE04A78387D855C5B9CD09AAACE48C76E18E71E9E24
4D40E2FEAC71E9D3E3478F61A1141BB92A5609CA7A511D3A13D0F11B4470C08D
B98AE96E95985B597FE32D9C35EADCC4BC0B094E9266A508C22830DF81E3C662
13D332889182BDAABA69124E8A3323065945CB4498AC4D8D14D8796E4617E181
C24A16609944856940694F0B66017BD291EDB0A597FE3A7C3DB06280308DC602
3F399AFFB16440DF99AFAF80C4378D33E298DF27275A589CD5A72D8EEF510455
3B443DD3D5485ED712BDC21A17A267DB57F12B0B5A650BE68E26467DAF0BF87F
BF64DA2F62F16AE0CDC2147B5EE0191E0C63C5C4BB21CF9E3192552A0F83A4C6
3213000AF232763EF1820DB797096BF292518B338BCC84DA8A9DE221E081974B
349048080F3C802B6404027E3D44291342ED2E8482F258576B95517D210277F0
B41A36E78C5A199DDC69582B8030C9BFABB7CFFF302298ECC670EC377E280CE1
819DC791ECFA4C9608CBB9517A41183AA59250337B343FA54D29801160D93A9A
EB755C38225ED02D5117CE38AEE2E6FF1BC2F813F1B09BEC1FB607B57B8058B5
A16D59E9802B317BD3D97D392A037EE3015020FB9D92921B9CBE93D73F9D1138
F2F3E03052474622085B109E80AE90E9A0B468A618C09A0967871DB03146A038
F6BC97526A9EBF8DEB68E8F524C8741553E4E6CB7C2822F25A6796612C1A3E51
919DC33F45C1825FBE5BC8E86A3D000EDBAC72D8419D030F324F4A3BA7F39484
753EF7DED1E6EFB6136479806CC6260BEAD084B7A6C103E08175BB0E35F2DA2E
4F6BD66B7B09F048AAB298465C5F34807D011C27FB5A94D397D99AA8934365E7
4AC4C831B6D33F04B17705ED6A3AEBADD55D0D549494A54A1C69E13A8180C629
E018FB8AA119AA01B395A0E5623A76A8EB2B8E462B75312DE7428BA735D64BEE
5458B98B9FC46AE9DAFE58C6F050C82F8C97807EDE74C69852D02DD5D1C45477
008FDD2F2ABF6C70134BE06E17D164C2D5F38CE2F886935EDDB07DE326F816A2
6B12E552249FD453334550C09EDA91F86D9FFB9F50CF9A751895076432B4044F
E5EB400436DCF6222AF598057B42ED2E5F47335BD0D0C40DBA9FF3F41D0F3498
B5B677F3EE7BF8BBB563D851965A2DE14036A43F9CDD112E51B73A61ABE09734
BA65ABD2EE4E09F3BAC881B1B5EAA6ADEE311425FDF3ED59C3723CF4A0A0C7FE
F55ECC9F2312D20ED89DCAFE3C62A9129E3298308A9B0B0E4652C1D014232D39
CE9866F2366315A2E0E1176C1F85BD1EAF523E7ABA8F60A82DD5058E94CBAC2A
1E5C2E6E19DDF0B53153EFDDD33DFD3E9A9B96238A4898E70250DE995246C932
1D80670559626C779667046D93D0EB0168441348327E6424C06F0628382B73F6
09DDBBDFC134F4C681787BB1A646CD36A4371AE86098A912D6FE9DE9295719C1
93A6B0B069CFE286A4C5B643E854976C1909053EBB9D6DCB431F79D0110D95A5
5E23E4122D81BD3E52617A95ADC9EFC56B5C3FBF6E4C92864D5C25DE004E3A04
985571BACD23E4986C4C840EE570465463BF409C2D555954BC20ED762E4ADE84
265D23F5156572FC439FD616115C669864B3E5B89E54305E27A20973458AEE50
4F5DB4A2958EE3FA6D991E7091CCD78D99D7C12E7958542466C6CAD94A1944CA
0E39E4D0D34C42F36AEA129EB06FD8C7451879204AB127A61DE6FA86C457F775
510378EAF93BBA82BF0C755399617376B95D50C48F7CA8A6E158D2B7EFC33B4B
0E34A7DC46B51A00CDE9D89882516FF72D8BFA9890EF9F0CDDC3EF4FA8298311
9EC93EC9BE8D9F5AF46E84C8C2C5E73BF55EB266C2C542A69400444BA4E369AB
B9C65EBE325425350E8EB1BE1BAA6F14F5AA43A1B21DD5AA546CC68E55F9E43A
52451187B1C77D4D9A6C8150DC2DDB60F7676502FEDC511F8B04239BB9152D4A
D1B0584D80ED287FC8D1D66BBF186A7559253AE8E770B8C59F263E6E8B90B5A4
C6DE5747E4A1F2AF0A63C1FB30695C53D6864F71C5E5
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndResource
/F8_0 /TOCVUS+Times-Roman 1 1
[ /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quotesingle
  /parenleft/parenright/asterisk/plus/comma/hyphen/period/slash
  /zero/one/two/three/four/five/six/seven
  /eight/nine/colon/semicolon/less/equal/greater/question
  /at/A/B/C/D/E/F/G
  /H/I/J/K/L/M/N/O
  /P/Q/R/S/T/U/V/W
  /X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore
  /grave/a/b/c/d/e/f/g
  /h/i/j/k/l/m/n/o
  /p/q/r/s/t/u/v/w
  /x/y/z/braceleft/bar/braceright/asciitilde/bullet
  /Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl
  /circumflex/perthousand/Scaron/guilsinglleft/OE/bullet/Zcaron/bullet
  /bullet/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash
  /tilde/trademark/scaron/guilsinglright/oe/bullet/zcaron/Ydieresis
  /space/exclamdown/cent/sterling/currency/yen/brokenbar/section
  /dieresis/copyright/ordfeminine/guillemotleft/logicalnot/hyphen/registered/macron
  /degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
  /cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
  /Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
  /Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
  /Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
  /Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
  /agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
  /egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
  /eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
  /oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]
pdfMakeFont
%%EndSetup
pdfStartPage
270 rotate
-476 0 translate
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
0 0 476 286 re
W
q
q
[0.1 0 0 0.1 0 0] cm
{} settransfer
10 w
3.8 M
/DeviceGray {} CS
[0] SC
3672 495 m
3672 558 l
3672 2669 m
3672 2606 l
S
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 1 -1 0 375.53 -3] Tm
0 0 Td
/F8_0 25 Tf
( 0.1)
[6.25
0
12.5
0
6.25
0
12.5
0] Tj
Q
3146 495 m
3146 558 l
3146 2669 m
3146 2606 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 1 -1 0 322.93 -3] Tm
0 0 Td
/F8_0 25 Tf
( 0.2)
[6.25
0
12.5
0
6.25
0
12.5
0] Tj
Q
2620 495 m
2620 558 l
2620 2669 m
2620 2606 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 1 -1 0 270.33 -3] Tm
0 0 Td
/F8_0 25 Tf
( 0.3)
[6.25
0
12.5
0
6.25
0
12.5
0] Tj
Q
4040 806 m
3977 806 l
2620 806 m
2683 806 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 1 -1 0 437.33 61.85] Tm
0 0 Td
/F8_0 25 Tf
( 0.3)
[6.25
0
12.5
0
6.25
0
12.5
0] Tj
Q
4040 1427 m
3977 1427 l
2620 1427 m
2683 1427 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 1 -1 0 437.33 123.95] Tm
0 0 Td
/F8_0 25 Tf
( 0.4)
[6.25
0
12.5
0
6.25
0
12.5
0] Tj
Q
4040 2048 m
3977 2048 l
2620 2048 m
2683 2048 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 1 -1 0 437.33 186.05] Tm
0 0 Td
/F8_0 25 Tf
( 0.5)
[6.25
0
12.5
0
6.25
0
12.5
0] Tj
Q
4040 2669 m
3977 2669 l
2620 2669 m
2683 2669 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 1 -1 0 437.33 248.15] Tm
0 0 Td
/F8_0 25 Tf
( 0.6)
[6.25
0
12.5
0
6.25
0
12.5
0] Tj
Q
2620 495 1420 2174 re
S
/DeviceRGB {} cs
[0 0 0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 1 -1 0 474.83 166.95] Tm
0 0 Td
/F8_0 25 Tf
(x)
[12.5
0] Tj
Q
15 w
3615.5 972.5 189 189 re
S
2666.5 1977.5 189 189 re
S
3947 652.5 m
3894.81 652.5 3852.5 610.191 3852.5 558 c
3852.5 505.809 3894.81 463.5 3947 463.5 c
3999.19 463.5 4041.5 505.809 4041.5 558 c
4041.5 610.191 3999.19 652.5 3947 652.5 c
S
3335 1826.5 m
3282.81 1826.5 3240.5 1784.19 3240.5 1732 c
3240.5 1679.81 3282.81 1637.5 3335 1637.5 c
3387.19 1637.5 3429.5 1679.81 3429.5 1732 c
3429.5 1784.19 3387.19 1826.5 3335 1826.5 c
S
3669 1388.5 m
3616.81 1388.5 3574.5 1346.19 3574.5 1294 c
3574.5 1241.81 3616.81 1199.5 3669 1199.5 c
3721.19 1199.5 3763.5 1241.81 3763.5 1294 c
3763.5 1346.19 3721.19 1388.5 3669 1388.5 c
S
3811 1091.5 m
3758.81 1091.5 3716.5 1049.19 3716.5 997 c
3716.5 944.809 3758.81 902.5 3811 902.5 c
3863.19 902.5 3905.5 944.809 3905.5 997 c
3905.5 1049.19 3863.19 1091.5 3811 1091.5 c
S
3937 700.5 m
3884.81 700.5 3842.5 658.191 3842.5 606 c
3842.5 553.809 3884.81 511.5 3937 511.5 c
3989.19 511.5 4031.5 553.809 4031.5 606 c
4031.5 658.191 3989.19 700.5 3937 700.5 c
S
3260.5 1738 m
3325.8 1648.12 l
3431.45 1682.45 l
3431.45 1793.55 l
3325.8 1827.88 l
3260.5 1738 l
h
S
3348.5 1642 m
3413.8 1552.12 l
3519.45 1586.45 l
3519.45 1697.55 l
3413.8 1731.88 l
3348.5 1642 l
h
S
2812.5 2071 m
2877.8 1981.12 l
2983.45 2015.45 l
2983.45 2126.55 l
2877.8 2160.88 l
2812.5 2071 l
h
S
2802.5 2077 m
2867.8 1987.12 l
2973.45 2021.45 l
2973.45 2132.55 l
2867.8 2166.88 l
2802.5 2077 l
h
S
3815.5 631 m
3880.8 541.121 l
3986.45 575.449 l
3986.45 686.551 l
3880.8 720.879 l
3815.5 631 l
h
S
3141.5 1848 m
3206.8 1758.12 l
3312.45 1792.45 l
3312.45 1903.55 l
3206.8 1937.88 l
3141.5 1848 l
h
S
3497.5 1439 m
3562.8 1349.12 l
3668.45 1383.45 l
3668.45 1494.55 l
3562.8 1528.88 l
3497.5 1439 l
h
S
2646.5 2144 m
2711.8 2054.12 l
2817.45 2088.45 l
2817.45 2199.55 l
2711.8 2233.88 l
2646.5 2144 l
h
S
3627.5 1206 m
3692.8 1116.12 l
3798.45 1150.45 l
3798.45 1261.55 l
3692.8 1295.88 l
3627.5 1206 l
h
S
30 w
3882 576 m
3880 607 l
3878 638 l
3876 669 l
3873 699 l
3869 730 l
3865 761 l
3860 791 l
3854 822 l
3848 852 l
3842 882 l
3835 912 l
3827 942 l
3819 971 l
3811 1001 l
3802 1030 l
3792 1059 l
3782 1087 l
3771 1116 l
3761 1144 l
3749 1172 l
3737 1200 l
3725 1227 l
3712 1255 l
3699 1282 l
3686 1308 l
3672 1335 l
3658 1361 l
3643 1387 l
3628 1412 l
3613 1437 l
3597 1462 l
3581 1487 l
3564 1511 l
3547 1535 l
3530 1558 l
3513 1581 l
3495 1604 l
3477 1627 l
3459 1649 l
3440 1671 l
3421 1692 l
3402 1713 l
3382 1734 l
3362 1755 l
3342 1775 l
3322 1794 l
3301 1814 l
3280 1833 l
3259 1851 l
3238 1869 l
3216 1887 l
3194 1904 l
3172 1921 l
3150 1938 l
3128 1954 l
3105 1970 l
3082 1985 l
3059 2000 l
3036 2015 l
3013 2029 l
2989 2043 l
2966 2057 l
2942 2070 l
2918 2082 l
2894 2095 l
2869 2106 l
2845 2118 l
2820 2129 l
2796 2140 l
2771 2150 l
2746 2160 l
2721 2169 l
2696 2178 l
2670 2187 l
2645 2195 l
2620 2203 l
S
10 w
2620 495 1420 2174 re
S
1374 468 m
1374 531 l
1374 2696 m
1374 2633 l
S
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 1 -1 0 145.73 -5.7] Tm
0 0 Td
/F8_0 25 Tf
( 0.7)
[6.25
0
12.5
0
6.25
0
12.5
0] Tj
Q
738 468 m
738 531 l
738 2696 m
738 2633 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 1 -1 0 82.1301 -5.7] Tm
0 0 Td
/F8_0 25 Tf
( 0.8)
[6.25
0
12.5
0
6.25
0
12.5
0] Tj
Q
101 468 m
101 531 l
101 2696 m
101 2633 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 1 -1 0 18.4301 -5.7] Tm
0 0 Td
/F8_0 25 Tf
( 0.9)
[6.25
0
12.5
0
6.25
0
12.5
0] Tj
Q
1820 468 m
1757 468 l
101 468 m
164 468 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 1 -1 0 215.33 37.425] Tm
0 0 Td
/F8_0 25 Tf
( 0)
[6.25
0
12.5
0] Tj
Q
1820 1105 m
1757 1105 l
101 1105 m
164 1105 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 1 -1 0 215.33 91.75] Tm
0 0 Td
/F8_0 25 Tf
( 0.1)
[6.25
0
12.5
0
6.25
0
12.5
0] Tj
Q
1820 1741 m
1757 1741 l
101 1741 m
164 1741 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 1 -1 0 215.33 155.35] Tm
0 0 Td
/F8_0 25 Tf
( 0.2)
[6.25
0
12.5
0
6.25
0
12.5
0] Tj
Q
1820 2378 m
1757 2378 l
101 2378 m
164 2378 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 1 -1 0 215.33 219.05] Tm
0 0 Td
/F8_0 25 Tf
( 0.3)
[6.25
0
12.5
0
6.25
0
12.5
0] Tj
Q
101 468 1719 2228 re
S
15 w
190.5 1033.5 189 189 re
S
131.5 398.5 189 189 re
S
380.5 1731.5 189 189 re
S
381.5 1733.5 189 189 re
S
442 1539.5 m
389.809 1539.5 347.5 1497.19 347.5 1445 c
347.5 1392.81 389.809 1350.5 442 1350.5 c
494.191 1350.5 536.5 1392.81 536.5 1445 c
536.5 1497.19 494.191 1539.5 442 1539.5 c
S
331 938.5 m
278.812 938.5 236.5 896.191 236.5 844 c
236.5 791.809 278.812 749.5 331 749.5 c
383.191 749.5 425.5 791.809 425.5 844 c
425.5 896.191 383.191 938.5 331 938.5 c
S
513 1765.5 m
460.809 1765.5 418.5 1723.19 418.5 1671 c
418.5 1618.81 460.809 1576.5 513 1576.5 c
565.191 1576.5 607.5 1618.81 607.5 1671 c
607.5 1723.19 565.191 1765.5 513 1765.5 c
S
942 2621.5 m
889.809 2621.5 847.5 2579.19 847.5 2527 c
847.5 2474.81 889.809 2432.5 942 2432.5 c
994.191 2432.5 1036.5 2474.81 1036.5 2527 c
1036.5 2579.19 994.191 2621.5 942 2621.5 c
S
660 2129.5 m
607.809 2129.5 565.5 2087.19 565.5 2035 c
565.5 1982.81 607.809 1940.5 660 1940.5 c
712.191 1940.5 754.5 1982.81 754.5 2035 c
754.5 2087.19 712.191 2129.5 660 2129.5 c
S
231.5 1060 m
296.797 970.121 l
402.449 1004.45 l
402.449 1115.55 l
296.797 1149.88 l
231.5 1060 l
h
S
195.5 742 m
260.797 652.121 l
366.449 686.449 l
366.449 797.551 l
260.797 831.879 l
195.5 742 l
h
S
202.5 825 m
267.797 735.121 l
373.449 769.449 l
373.449 880.551 l
267.797 914.879 l
202.5 825 l
h
S
187.5 588 m
252.797 498.121 l
358.449 532.449 l
358.449 643.551 l
252.797 677.879 l
187.5 588 l
h
S
796.5 2503 m
861.801 2413.12 l
967.449 2447.45 l
967.449 2558.55 l
861.801 2592.88 l
796.5 2503 l
h
S
647.5 2262 m
712.801 2172.12 l
818.449 2206.45 l
818.449 2317.55 l
712.801 2351.88 l
647.5 2262 l
h
S
373.5 1643 m
438.801 1553.12 l
544.449 1587.45 l
544.449 1698.55 l
438.801 1732.88 l
373.5 1643 l
h
S
453.5 1859 m
518.801 1769.12 l
624.449 1803.45 l
624.449 1914.55 l
518.801 1948.88 l
453.5 1859 l
h
S
738.5 2414 m
803.801 2324.12 l
909.449 2358.45 l
909.449 2469.55 l
803.801 2503.88 l
738.5 2414 l
h
S
30 w
1026 2696 m
1009 2673 l
990 2648 l
971 2622 l
953 2596 l
934 2570 l
916 2544 l
899 2517 l
881 2491 l
864 2464 l
847 2437 l
831 2410 l
814 2383 l
798 2355 l
782 2328 l
766 2300 l
751 2272 l
736 2244 l
721 2216 l
707 2187 l
692 2159 l
678 2130 l
665 2102 l
651 2073 l
638 2044 l
625 2015 l
613 1985 l
600 1956 l
588 1927 l
577 1897 l
565 1867 l
554 1837 l
543 1808 l
533 1778 l
522 1747 l
512 1717 l
503 1687 l
493 1656 l
484 1626 l
475 1595 l
467 1565 l
459 1534 l
451 1503 l
443 1472 l
436 1441 l
429 1410 l
423 1379 l
416 1348 l
410 1316 l
405 1285 l
400 1254 l
395 1222 l
390 1191 l
386 1159 l
382 1128 l
379 1096 l
376 1064 l
373 1033 l
371 1001 l
369 969 l
367 937 l
366 906 l
366 842 l
367 810 l
368 778 l
370 746 l
372 715 l
376 683 l
381 652 l
387 620 l
S
10 w
101 468 1719 2228 re
S
{} settransfer
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Trailer
end
%%DocumentSuppliedResources:
%%+ font TOCVUS+Times-Roman
%%EOF
